{"version":3,"sources":["context/GlobalContext.js","context/GlobalReducer.js","context/GlobalState.js","components/Header/Header.js","components/Balance/Balance.js","components/AddTransaction/AddTransaction.js","components/IncomeTransaction/IncomeTransaction.js","components/IncomeList/IncomeList.js","components/ExpenseTransaction/ExpenseTransaction.js","components/ExpenseList/ExpenseList.js","App.js","index.js"],"names":["GlobalContext","createContext","GlobalReducer","state","action","console","log","type","incomeTransactions","payload","expenseTransactions","filter","transaction","id","GlobalContextProvider","props","income","localStorage","getItem","expense","initialState","JSON","parse","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","addIncome","addExpense","deleteTransaction","children","Header","className","Balance","sign","useContext","incomeAmounts","map","incomeAmount","expenseAmounts","expenseAmount","totalIncome","reduce","a","b","toFixed","totalExpense","total","Math","abs","AddTransaction","useState","incomeText","setIncome","onChangeIncome","e","target","name","expenseText","setExpense","onChangeExpense","onSubmit","preventDefault","newIncomeTransaction","uuid","placeholder","autoComplete","onChange","newExpenseTransaction","IncomeTransaction","onClick","IncomeList","ExpenseTransaction","ExpenseList","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94071560.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\n\r\n//global context\r\nexport const GlobalContext = createContext();","export const GlobalReducer = (state, action) => {\r\n    console.log(state, action)\r\n    switch (action.type) {\r\n        case 'ADD_INCOME':\r\n            return {\r\n                ...state,\r\n                incomeTransactions: [action.payload, ...state.incomeTransactions]\r\n            };\r\n        case 'ADD_EXPENSE':\r\n            return {\r\n                ...state,\r\n                expenseTransactions: [action.payload, ...state.expenseTransactions]\r\n            };\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                incomeTransactions: state.incomeTransactions.filter(transaction => transaction.id !== action.payload),\r\n                expenseTransactions: state.expenseTransactions.filter(transaction => transaction.id !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer, useEffect } from 'react';\r\nimport { GlobalContext } from './GlobalContext';\r\nimport { GlobalReducer } from './GlobalReducer';\r\nexport const GlobalContextProvider = (props) => {\r\n    const income = localStorage.getItem('income');\r\n    const expense = localStorage.getItem('expense');\r\n\r\n    const initialState = {\r\n        incomeTransactions: JSON.parse(income) || [],\r\n        expenseTransactions: JSON.parse(expense) || []\r\n    }\r\n    const [state, dispatch] = useReducer(GlobalReducer, initialState);\r\n\r\n    //add income action\r\n    const addIncome = (transaction) => {\r\n        dispatch({ type: 'ADD_INCOME', payload: transaction })\r\n    }\r\n    //add expense action\r\n    const addExpense = (transaction) => {\r\n        dispatch({ type: 'ADD_EXPENSE', payload: transaction })\r\n    }\r\n    //delete transaction\r\n    const deleteTransaction = (id) => {\r\n        dispatch({ type: 'DELETE_TRANSACTION', payload: id })\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('income', JSON.stringify(state.incomeTransactions));\r\n        localStorage.setItem('expense', JSON.stringify(state.expenseTransactions));\r\n    })\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={\r\n                {\r\n                    incomeTransactions: state.incomeTransactions,\r\n                    expenseTransactions: state.expenseTransactions,\r\n                    addIncome,\r\n                    addExpense,\r\n                    deleteTransaction\r\n                }\r\n            }>\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Budget App</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\n\r\n\r\nconst Balance = () => {\r\n    const { incomeTransactions, expenseTransactions } = useContext(GlobalContext);\r\n\r\n    const incomeAmounts = incomeTransactions.map(income => income.incomeAmount);\r\n    const expenseAmounts = expenseTransactions.map(expense => expense.expenseAmount);\r\n    const totalIncome = incomeAmounts.reduce((a, b) => a += b, 0).toFixed(2);\r\n    const totalExpense = expenseAmounts.reduce((a, b) => a += b, 0).toFixed(2);\r\n    //console.log(totalIncome, totalExpense);\r\n    const total = (totalIncome - totalExpense);\r\n    let sign;\r\n    if (total === 0) {\r\n        sign = '';\r\n    } else {\r\n        sign = total > 0 ? '+' : '-';\r\n    }\r\n    //console.log(total)\r\n    return (\r\n        <div className=\"balance\">\r\n            <div>\r\n                <h2>Your Balance</h2>\r\n                <h3>{sign}${Math.abs(total).toFixed(2)}</h3>\r\n            </div>\r\n            <div className=\"income-expense\">\r\n                <div className=\"plus\">\r\n                    <h3>Income</h3>\r\n                    <p>+${totalIncome}</p>\r\n                </div>\r\n                <div className=\"minus\">\r\n                    <h3>Expenses</h3>\r\n                    <p>-${totalExpense}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance;","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n\r\nconst AddTransaction = () => {\r\n    const { addIncome, addExpense } = useContext(GlobalContext);\r\n\r\n    //INCOME\r\n    const [income, setIncome] = useState({\r\n        incomeText: '',\r\n        incomeAmount: 0\r\n    })\r\n    const { incomeText, incomeAmount } = income;\r\n    const onChangeIncome = (e) => {\r\n        setIncome({ ...income, [e.target.name]: e.target.value });\r\n    }\r\n    //console.log(income);\r\n    const onSubmitIncome = (e) => {\r\n        e.preventDefault();\r\n        if (incomeText !== '' && incomeAmount !== 0 && incomeAmount > 0) {\r\n            const newIncomeTransaction = {\r\n                id: uuid(),\r\n                incomeText,\r\n                incomeAmount: +incomeAmount\r\n            }\r\n            //console.log(newIncomeTransaction);\r\n            addIncome(newIncomeTransaction);\r\n            setIncome({\r\n                incomeText: '',\r\n                incomeAmount: 0\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //EXPENSE\r\n    const [expense, setExpense] = useState({\r\n        expenseText: '',\r\n        expenseAmount: 0\r\n    })\r\n    const { expenseText, expenseAmount } = expense;\r\n    const onChangeExpense = (e) => {\r\n        setExpense({ ...expense, [e.target.name]: e.target.value });\r\n    }\r\n    //console.log(expense);\r\n    const onSubmitExpense = (e) => {\r\n        e.preventDefault();\r\n        if (expenseText !== '' && expenseAmount !== 0 && expenseAmount > 0) {\r\n            const newExpenseTransaction = {\r\n                id: uuid(),\r\n                expenseText,\r\n                expenseAmount: +expenseAmount\r\n            }\r\n            //console.log(newExpenseTransaction);\r\n            addExpense(newExpenseTransaction);\r\n            setExpense({\r\n                expenseText: '',\r\n                expenseAmount: 0\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-wrapper\">\r\n            <form onSubmit={onSubmitIncome}>\r\n                <div className=\"input-group income\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Add Income...\"\r\n                        autoComplete=\"off\"\r\n                        name=\"incomeText\"\r\n                        value={incomeText}\r\n                        onChange={onChangeIncome}\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Amount\"\r\n                        autoComplete=\"off\"\r\n                        name=\"incomeAmount\"\r\n                        value={incomeAmount}\r\n                        onChange={onChangeIncome}\r\n                    />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </div>\r\n            </form>\r\n            <form onSubmit={onSubmitExpense}>\r\n                <div className=\"input-group expense\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Add Expense...\"\r\n                        name=\"expenseText\"\r\n                        autoComplete=\"off\"\r\n                        value={expenseText}\r\n                        onChange={onChangeExpense}\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Amount\"\r\n                        name=\"expenseAmount\"\r\n                        autoComplete=\"off\"\r\n                        value={expenseAmount}\r\n                        onChange={onChangeExpense}\r\n                    />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTransaction;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\nimport { TiTrash } from \"react-icons/ti\";\r\n\r\n\r\nconst IncomeTransaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <li className=\"transaction\" >\r\n            <div>\r\n                <span className=\"transaction-text\">{transaction.incomeText}</span>\r\n                <span className=\"transaction-amount\">+${transaction.incomeAmount}</span>\r\n            </div>\r\n            <button className=\"delete-btn\">\r\n                <TiTrash onClick={() => deleteTransaction(transaction.id)} />\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default IncomeTransaction;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\nimport IncomeTransaction from '../IncomeTransaction/IncomeTransaction';\r\n\r\nconst IncomeList = () => {\r\n    const { incomeTransactions } = useContext(GlobalContext);\r\n    //console.log(incomeTransations, expenseTransactions);\r\n    return (\r\n        <div className=\" transactions-income\">\r\n            <h2>Transaction History</h2>\r\n            <ul className=\"transaction-list\">\r\n                {incomeTransactions.map(transaction => {\r\n                    return <IncomeTransaction transaction={transaction} key={transaction.id} />\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncomeList;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\nimport { TiTrash } from \"react-icons/ti\";\r\n\r\n\r\nconst ExpenseTransaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <li className=\"transaction\">\r\n            <div>\r\n                <span className=\"transaction-text\">{transaction.expenseText}</span>\r\n                <span className=\"transaction-amount\">-${transaction.expenseAmount}</span>\r\n            </div>\r\n            <button className=\"delete-btn\">\r\n                <TiTrash onClick={() => deleteTransaction(transaction.id)} />\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseTransaction;","import React, { useContext } from 'react';\r\nimport ExpenseTransaction from '../ExpenseTransaction/ExpenseTransaction';\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\n\r\nconst ExpenseList = () => {\r\n    const { expenseTransactions } = useContext(GlobalContext);\r\n    return (\r\n        <div className=\" transactions-expense\">\r\n            <h2>Transaction History</h2>\r\n            <ul className=\"transaction-list\">\r\n                {expenseTransactions.map(transaction => {\r\n                    return <ExpenseTransaction transaction={transaction} key={transaction.id} />\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseList;","import React from 'react';\nimport { GlobalContextProvider } from './context/GlobalState';\nimport Header from './components/Header/Header';\nimport Balance from './components/Balance/Balance';\nimport AddTransaction from './components/AddTransaction/AddTransaction';\nimport IncomeList from './components/IncomeList/IncomeList';\nimport ExpenseList from './components/ExpenseList/ExpenseList';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n  return (\n    <GlobalContextProvider >\n      <div className=\"container\">\n        <div className=\"app-wrapper\">\n          <Header />\n          <Balance />\n          <AddTransaction />\n          <div className=\"transactions\">\n            <IncomeList />\n            <ExpenseList />\n          </div>\n        </div>\n      </div>\n    </GlobalContextProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}